<style>
  body.payroll-page {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f5f7fa;
    color: #333;
    font-size: 12px;
  }

  h2 {
    font-size: 20px;
    color: #333;
    margin-bottom: 15px;
  }

  input, select, textarea {
    padding: 4px;
    font-size: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    height: 24px;
  }

  button {
    padding: 4px 12px;
    font-size: 12px;
    border: 1px solid #066da5;
    border-radius: 4px;
    background-color: #fff;
    cursor: pointer;
  }

  .container { margin: 0 20px; }
  .form-group { display: flex; align-items: center; gap: 0.5rem; margin-bottom: 20px; }
  .form-group select { min-width: 200px; }
  .reference-btn { margin-left: 0.5rem; }

  .payroll-table-wrapper {
  display: flex;
  flex-wrap: nowrap; /* Ìïú Ï§ÑÎ°ú Í∞ïÏ†ú */
  overflow-x: auto;  /* ÎÑàÎπÑ Ï¥àÍ≥º Ïãú Ïä§ÌÅ¨Î°§ ÌóàÏö© */
  gap: 10px;
  margin-bottom: 20px;
  padding: 10px;
  background-color: #f5f7fa;
  border-radius: 8px;
}

  .payroll-group {
    display: flex;
    gap: 1rem;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 10px;
    flex-direction: row;
    align-items: flex-start;
    background-color: #fff;
  }

  .payroll-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
  }

  .payroll-item input {
  width: 93px;   /* Í∏∞Ï°¥ 70pxÏóêÏÑú ÏÇ¥Ïßù Ï§ÑÏûÑ */
}
  .payroll-item label {
    font-weight: bold;
  }

  .payroll-form { width: 100%; box-sizing: border-box; }
  .row { margin-bottom: 20px; }

  .remark-inline {
    display: flex;
    align-items: center;
    gap: 6rem;
    margin-bottom: 20px;
    flex-wrap: wrap;
  }

  .remark-inline input {
    flex: 0 0 200px;
    min-width: 200px;
  }

  .work-info {
    display: flex;
    gap: 6rem;
    align-items: center;
  }

  .footer-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 20px;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .footer-left, .footer-center, .footer-right {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .footer-center {
    justify-content: center;
    flex: 1;
  }

  .back-button-row {
    display: flex;
    justify-content: center;
    margin-top: 30px;
  }

  .back-button-row button {
    padding: 4px 12px;
    font-size: 12px;
    background-color: #fff;
    border: 1px solid #666;
    border-radius: 4px;
    cursor: pointer;
  }

  .back-button-row button:hover {
    background-color: #eee;
  }

  #saveComment {
    text-align: center;
    margin-top: 10px;
    font-size: 0.95rem;
    color: green;
  }

  .blue-text {
    color: #007bff;
    font-weight: bold;
  }

  .red-text {
    color: red;
    font-weight: bold;
  }

  .pay-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 12px;
  background-color: #fff;
  margin-top: 20px;
}

.pay-table thead {
  background-color: #f0f8ff;
}

.pay-table th, .pay-table td {
  border: 1px solid #ccc;
  padding: 6px;
  text-align: center;
  white-space: nowrap;
}

.pay-table th {
  font-weight: bold;
  color: #333;
}

.pay-table td {
  color: #444;
}

.pay-table tr:nth-child(even) {
  background-color: #f9f9f9;
}

.pay-table tr:hover {
  background-color: #eef6ff;
}

</style>

</head>
<body class="payroll-page">
  <h2>Pay List</h2>
  <div class="container">
    <form id="payrollForm" action="/admin/payroll/payroll_tax/add" method="post" class="payroll-form" onsubmit="return showSaveComment()">
      <div class="row">
        <div class="form-group">
          <label for="name">Name :</label>
          <select id="ep_ref" name="name" onchange="updateReferenceInfo()">
            <option value="">-- Select Employee --</option>
            <% employees.forEach(emp => { %>
              <option value="<%= emp.name %>" data-eid="<%= emp.eid %>" data-jcode="<%= emp.jcode %>" data-jtitle="<%= emp.jtitle %>" data-work1="<%= emp.work1 %>">
                <%= emp.name %>
              </option>
            <% }) %>
          </select>
          <button type="button" onclick="loadLatestPaylist()" class="reference-btn">Reference</button>
          <span id="eidDisplay" class="blue-text"></span>
        </div>
      </div>

      <% if (selectedEidName) { %>
        <div style="text-align: center; margin-bottom: 1rem;">
          <span class="red-text">Ïù¥Ï†Ñ ÏûÖÎ†• ÏûêÎ£å | <%= selectedEidName %></span>
        </div>
      <% } %>

      <div class="row">
        <label for="pdate">Pay Date :</label>
        <input type="date" name="pdate" id="pdate" value="<%= selectedPdate %>" required>
      </div>

      <div class="payroll-table-wrapper">
        <div class="payroll-group">
          <div class="payroll-item"><label>Check No.</label><input type="text" name="ckno_table" autocomplete="off"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>R.T</label><input type="text" name="rtime" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>O.T</label><input type="text" name="otime" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>D.T</label><input type="text" name="dtime" autocomplete="off" oninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>FW</label><input type="text" name="fw" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>SSE</label><input type="text" name="sse" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>ME</label><input type="text" name="me" autocomplete="off" oninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>CA-W</label><input type="text" name="caw" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>CA-de</label><input type="text" name="cade" autocomplete="off" oninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>ADV.</label><input type="text" name="adv" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>C.S</label><input type="text" name="d1" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>D.D</label><input type="text" name="dd" autocomplete="off" ninput="formatDecimal(this)"></div>
        </div>
        <div class="payroll-group" style="align-items: center; justify-content: center;">
          <div class="payroll-item" style="margin-top: 22px;">
            <button type="button" onclick="calculateNet()">Ï¥ùÏï° Í≥ÑÏÇ∞</button>
          </div>
        </div>
        <div class="payroll-group">
          <div class="payroll-item"><label>Gross</label><input type="text" name="gross" autocomplete="off" oninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>Tax</label><input type="text" name="tax" autocomplete="off" ninput="formatDecimal(this)"></div>
          <div class="payroll-item"><label>Net</label><input type="text" name="net" autocomplete="off" ninput="formatDecimal(this)"></div>
        </div>
      </div>

      <div class="remark-inline">
        <label for="remark">Remark :</label>
        <input type="text" name="remark" id="remark">
        <div class="work-info">
          <span>W.code: <span id="jcodeDisplay" class="blue-text"></span></span>
          <span>W.title: <span id="jtitleDisplay" class="blue-text"></span></span>
          <span>W.location: <span id="work1Display" class="blue-text"></span></span>
        </div>
      </div>

      <div class="footer-actions">
        <div class="footer-left">
          <label for="ckno">Check No. :</label>
          <input type="text" name="ckno" id="ckno">
          <button type="button" id="btn-select">ÏÑ†ÌÉù</button>
          <button type="button" id="btn-update">ÏàòÏ†ï</button>
          <button type="button" id="btn-delete">ÏÇ≠Ï†ú</button>
        </div>
        
        <div class="footer-center">AC
          <input type="date" name="selectedDate">
          <button type="button" class="view-btn">Î≥¥Í∏∞</button>
          <button type="button" class="print-btn">Ï∂úÎ†•</button>
          <input type="date" name="selectedDate" id="selectedDate">
          <button type="button" onclick="viewPaylistPDF()">üìÑ View PDF</button>
          <button type="button" onclick="printPaylistPDF()">üñ®Ô∏è Print PDF</button>
          <button type="button" onclick="downloadCSV()">üíæ CSV Ï†ÄÏû•</button>
        </div>
        <div class="footer-right">
          <button type="submit">ÏûÖÎ†•Ï†ÄÏû•</button>
        </div>
      </div>
      <div id="saveComment"></div>
      <input type="hidden" name="eid" id="hiddenEid">
      <input type="hidden" name="jcode" id="hiddenJcode">
      <input type="hidden" name="jtitle" id="hiddenJtitle">
      <input type="hidden" name="work1" id="hiddenWork1">
    </form>
    <div class="back-button-row">
      <button onclick="window.location.href='/payroll'">Ï∞Ω Îã´Í∏∞</button>
    </div>
  </div>
<!-- ‚úÖ ÌïòÎã® Pay List Table -->
<h3 style="margin-top: 40px; border-top: 1px solid #ccc; padding-top: 20px;">Pay Records (Selected Pay Date)</h3>

<table class="pay-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Check No</th>
      <th>R.T</th>
      <th>O.T</th>
      <th>D.T</th>
      <th>FW</th>        
      <th>SSE</th>       
      <th>ME</th>        
      <th>CA-W</th>
      <th>CA-de</th>
      <th>ADV.</th>
      <th>C.S</th>
      <th>D.D</th>
      <th>Gross</th>
      <th>Tax</th>
      <th>Net</th>
      <th>Remark</th>
    </tr>
  </thead>
  <tbody>
    <% if (paylist && paylist.length > 0) { %>
      <% paylist.forEach(row => { %>
        <tr>
          <td><%= row.name %></td>
          <td><%= row.ckno %></td>
          <td><%= row.rtime %></td>
          <td><%= row.otime %></td>
          <td><%= row.dtime %></td>
          <td><%= row.fw %></td>      
          <td><%= row.sse %></td>     
          <td><%= row.me %></td>      
          <td><%= row.caw %></td>
          <td><%= row.cade %></td>
          <td><%= row.adv %></td>
          <td><%= row.csp || row.d1 %></td>
          <td><%= row.dd %></td>
          <td><%= row.gross %></td>
          <td><%= row.tax %></td>
          <td><%= row.net %></td>
          <td><%= row.remark || '' %></td>
        </tr>
      <% }) %>
    <% } else { %>
      <tr><td colspan="14" style="text-align:center; padding: 10px;">ÏÑ†ÌÉùÌïú ÎÇ†ÏßúÏóê ÎåÄÌïú Í∏∞Î°ùÏù¥ ÏóÜÏäµÎãàÎã§.</td></tr>
    <% } %>
  </tbody>


  <script>
    function updateReferenceInfo() {
      const selected = document.querySelector('#ep_ref');
      const option = selected.options[selected.selectedIndex];

      const eidVal = option.getAttribute('data-eid') || '';
      const jcodeVal = option.getAttribute('data-jcode') || '';
      const jtitleVal = option.getAttribute('data-jtitle') || '';
      const work1Val = option.getAttribute('data-work1') || '';

      document.getElementById('eidDisplay').innerText = eidVal;
      document.getElementById('jcodeDisplay').innerText = jcodeVal;
      document.getElementById('jtitleDisplay').innerText = jtitleVal;
      document.getElementById('work1Display').innerText = work1Val;

      document.getElementById('hiddenEid').value = eidVal;
      document.getElementById('hiddenJcode').value = jcodeVal;
      document.getElementById('hiddenJtitle').value = jtitleVal;
      document.getElementById('hiddenWork1').value = work1Val;
    }

    function loadLatestPaylist() {
  const selected = document.querySelector('#ep_ref');
  const eid = selected.options[selected.selectedIndex]?.getAttribute('data-eid');

  if (!eid) {
    alert('ÏßÅÏõêÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.');
    return;
  }

  fetch(`/payroll/paylist/latest?eid=${eid}`)
    .then(res => res.json())
    .then(data => {
      if (!data || !data.success) {
        alert('ÏµúÍ∑º Í∏âÏó¨ Îç∞Ïù¥ÌÑ∞Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
        return;
      }

      const fields = ['rtime', 'otime', 'dtime', 'fw', 'sse', 'me', 'caw', 'cade', 'adv', 'd1', 'dd', 'remark'];
      fields.forEach(field => {
        if (data[field] !== undefined) {
          if (field === 'remark') {
            document.querySelector(`[name="${field}"]`).value = data[field];  // Í∑∏ÎÉ• Î¨∏ÏûêÏó¥ Ï≤òÎ¶¨
          } else {
            document.querySelector(`[name="${field}"]`).value = parseFloat(data[field]).toLocaleString('en-US', {
              minimumFractionDigits: 2,
              maximumFractionDigits: 2
            });
          }
        }
      });

      calculateNet();
    })
    .catch(err => {
      console.error('Reference Î∂àÎü¨Ïò§Í∏∞ Ïò§Î•ò:', err);
      alert('Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
    });
}

function showSaveComment() {
  const selected = document.querySelector('#ep_ref');
  const name = selected.value;
  const eid = selected.options[selected.selectedIndex]?.getAttribute('data-eid') || '';
  const commentBox = document.getElementById('saveComment');
  commentBox.innerText = `eid: ${eid} / ${name} Ïù¥ ÏßÄÍ∏à ÏûÖÎ†•ÎêòÏóàÏäµÎãàÎã§.`;
  return true;
}

    function formatDecimal(input) {
  let value = input.value;

  // Ïà´ÏûêÏôÄ ÏÜåÏàòÏ†êÎßå ÌóàÏö©
  value = value.replace(/[^\d.]/g, '');

  // ÏÜåÏàòÏ†ê 1Í∞úÎßå Ïú†ÏßÄ
  const parts = value.split('.');
  if (parts.length > 2) {
    value = parts[0] + '.' + parts[1];
  }

  input.value = value; // ÏûÖÎ†• Ï§ëÏóêÎäî Í∞ÄÍ≥µÌïòÏßÄ ÏïäÏùå

  // Ìè¨Ïª§Ïä§ Î≤óÏñ¥ÎÇ† Îïå Ìè¨Îß∑ Ï†ÅÏö©
  input.addEventListener('blur', () => {
    const num = parseFloat(input.value.replace(/,/g, '')); // ÏâºÌëú Ï†úÍ±∞ ÌõÑ Ïà´Ïûê Î≥ÄÌôò
    if (!isNaN(num)) {
      // ÏÜåÏàòÏ†ê 2ÏûêÎ¶¨ + ÏâºÌëú ÌòïÏãù Ï†ÅÏö©
      input.value = num.toLocaleString('en-US', {
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      });
    }
  });
}

function calculateNet() {
  const rtime = parseFloat(document.querySelector('[name="rtime"]').value.replace(/,/g, '')) || 0;
  const otime = parseFloat(document.querySelector('[name="otime"]').value.replace(/,/g, '')) || 0;
  const dtime = parseFloat(document.querySelector('[name="dtime"]').value.replace(/,/g, '')) || 0;

  const fw = parseFloat(document.querySelector('[name="fw"]').value.replace(/,/g, '')) || 0;
  const sse = parseFloat(document.querySelector('[name="sse"]').value.replace(/,/g, '')) || 0;
  const me = parseFloat(document.querySelector('[name="me"]').value.replace(/,/g, '')) || 0;
  const caw = parseFloat(document.querySelector('[name="caw"]').value.replace(/,/g, '')) || 0;
  const cade = parseFloat(document.querySelector('[name="cade"]').value.replace(/,/g, '')) || 0;

  const gross = rtime + otime + dtime;
  const tax = fw + sse + me + caw + cade;
  const net = gross - tax;

  const grossField = document.querySelector('[name="gross"]');
  const taxField = document.querySelector('[name="tax"]');
  const netField = document.querySelector('[name="net"]');

  grossField.value = gross.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
  taxField.value = tax.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
  netField.value = net.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
}


    document.addEventListener('DOMContentLoaded', () => {
      const fieldNames = ['ckno_table', 'rtime', 'otime', 'dtime', 'fw', 'sse', 'me', 'caw', 'cade', 'adv', 'd1', 'dd', 'remark'];
      const fields = fieldNames.map(name => document.querySelector(`[name="${name}"]`)).filter(el => el);

      fields.forEach((field, index) => {
        field.addEventListener('keydown', (e) => {
          if (e.key === 'Enter') {
            e.preventDefault();
            const next = fields[index + 1];
            if (next) next.focus();
          }
        });
      });
    });

/* Ï∂úÎ†•Ïö© Javascript Ìï®Ïàò
function viewPaylistPDF() {
  const date = document.getElementById('selectedDate').value;
  if (!date) {
    alert("ÎÇ†ÏßúÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");
    return;
  }
  window.open(`/payroll/pdf-view?pdate=${date}`, '_blank');
}
*/



function viewPaylistPDF() {
  const date = document.getElementById('selectedDate').value;
  if (!date) {
    alert("ÎÇ†ÏßúÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");
    return;
  }
  window.open(`/payroll/pdf-generate?pdate=${date}`, '_blank');
}

function printPaylistPDF() {
  const date = document.getElementById('selectedDate').value;
  if (!date) {
    alert("ÎÇ†ÏßúÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");
    return;
  }
  window.open(`/payroll/pdf-generate?pdate=${date}`, '_blank');
} 

// CVS Ï∂úÎ†• Ïö©

function downloadCSV() {
  const date = document.getElementById('selectedDate').value;
  if (!date) {
    alert("ÎÇ†ÏßúÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");
    return;
  }
  window.open(`/payroll/csv-export?pdate=${date}`, '_blank');
}


function validateForm() {
  const name = document.querySelector('[name="name"]').value;
  const ckno = document.querySelector('[name="ckno"]').value;
  const gross = document.querySelector('[name="gross"]').value;

  if (!name || !ckno || !gross) {
    alert('Name, Check No, Gross Í∞íÏùÄ ÌïÑÏàòÏûÖÎãàÎã§.');
    return false;
  }
  return true;
}

// ÏÑ†ÌÉù ÏàòÏ†ï ÏÇ≠Ï†ú Script 

document.getElementById('btn-select').addEventListener('click', selectRecord);
document.getElementById('btn-update').addEventListener('click', updateRecord);
document.getElementById('btn-delete').addEventListener('click', deleteRecord);


function selectRecord() {
  const ckno = document.getElementById('ckno').value;
  if (!ckno) return alert("Check No.Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî");

  fetch(`/admin/payroll/payroll_tax/select?ckno=${encodeURIComponent(ckno)}`)
    .then(res => res.json())
    .then(data => {
  if (!data.success) return alert("Ìï¥Îãπ Check No.Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.");
  const record = data.data;  // ‚Üê ÏàòÏ†ïÎêú Î∂ÄÎ∂Ñ
  for (const key in record) {
    const field = document.querySelector(`[name="${key}"]`);
    if (field) {
      field.value = record[key];
    }
  }
      calculateNet();
    })
    .catch(err => alert("Ï°∞Ìöå Ï§ë Ïò§Î•ò Î∞úÏÉù"));
}

function updateRecord() {
  const ckno = document.getElementById('ckno').value;
  if (!ckno) return alert("Check No.Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî");

  const form = document.getElementById('payrollForm');
  form.action = '/admin/payroll/payroll_tax/update';
  form.submit();
}

function deleteRecord() {
  const ckno = document.getElementById('ckno').value;
  if (!ckno) return alert("Check No.Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî");

  if (!confirm("Ï†ïÎßê ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?")) return;

  fetch('/admin/payroll/payroll_tax/delete', {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify({ ckno })
  })
    .then(res => res.json())
    .then(result => {
      if (result.success) {
        alert("ÏÇ≠Ï†ú ÏôÑÎ£å");
        location.reload();
      } else {
        alert("ÏÇ≠Ï†ú Ïã§Ìå® ÎòêÎäî Ìï¥Îãπ Check No. ÏóÜÏùå");
      }
    });
}
 
 </script>
</body>
</html>