<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Import PO Input</title>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: #f5f7fa;
      color: #333;
      display: flex;
      flex-direction: column;
      height: 100vh;
      font-size: 12px;
    }

    .top-section {
      flex: 0 0 auto;
      padding: 10px;
    }

    .bottom-section {
      flex: 1 1 auto;
      padding: 10px;
      overflow-y: auto;
    }

    h2 {
      font-size: 20px;
      color: #333;
      margin-bottom: 15px;
    }

    .form {
      width: 100%;
    }

    .form-row {
      display: flex;
      gap: 10px;
      margin-bottom: 10px;
      align-items: center;
    }

    input, select, textarea {
      padding: 4px;
      font-size: 12px;
      border: 1px solid #ccc;
      border-radius: 4px;
      height: 24px;
    }

    button {
      padding: 4px 12px;
      font-size: 12px;
      border: 1px solid #066da5;
      border-radius: 4px;
      background-color: #fff;
      cursor: pointer;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      border: 1px solid #ccc;
      padding: 4px;
      text-align: center;
      font-weight: normal;
      font-size: 12px;
    }

    td.negative {
      color: red;
    }

    th {
      background-color: #f0f8ff;
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .table-wrapper {
      max-height: 550px;
      overflow-y: auto;
      border: 1px solid #ccc;
    }

    .filter-section {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 10px;
      justify-content: space-between;
    }

    /* note 에 '환율적용 불필요' 가 있을시 색변화 */
    td.note-red {
  color: red;
  font-weight: bold;
  background-color: #ffeaea;
}


  </style>
 
</head>
<body>
  <div class="top-section">
    <h2>Import PO Input</h2>
    <div style="display: flex; gap: 40px; align-items: flex-start;">
      <!-- 1차 입력 -->
      <form method="POST" action="/admin/import_po/add/po" class="form" style="flex: 1;">
        <div class="form-row">
          <input type="date" name="po_date" id="shared-date" value="<%= today %>">
          <select name="v_name" id="shared-vendor" required>
            <% vendors.forEach(v => { %>
              <option value="<%= v.v_name %>" data-rate="<%= v.v_rate %>"><%= v.v_name %></option>
            <% }) %>
          </select>
          <input type="text" name="v_rate" placeholder="Deposit Rate" readonly>
        </div>
        <div class="form-row">
          <label style="white-space: nowrap;">PO 입력</label>
          <input type="text" name="style" placeholder="Style">
          <input type="text" name="po_no" placeholder="PO No.">
          <input type="number" name="pcs" placeholder="PCS" step="1">
          <input type="number" name="cost" placeholder="Cost" step="0.01">
          <button type="submit">➕ 입력</button>
        </div>
      </form>
      <!-- 2차 입력 -->
      <form method="POST" action="/admin/import_po/add/direct" class="form" style="flex: 1;">
        <div class="form-row">
          <input type="hidden" name="po_date" id="hidden-date">
          <input type="hidden" name="v_name" id="hidden-vendor">
          <label style="white-space: nowrap;">기타 입력</label>
          <input type="text" name="style" placeholder="입력종류">
          <input type="number" name="cost" placeholder="Amount" step="0.01">
          <input type="hidden" name="v_rate" value="">
          <button type="submit">➕ 입력</button>
        </div>
      </form>
    </div>
  </div>
  <div class="bottom-section">
    <div class="filter-section">
      <form method="GET" action="/admin/import_po" class="form-row">
        <select name="v_name">
          <option value="">:: Vendor Name ::</option>
          <% vendors.forEach(v => { %>
            <option value="<%= v.v_name %>" <%= v.v_name === v_name ? 'selected' : '' %>><%= v.v_name %></option>
          <% }) %>
        </select>
        <select name="po_no">
          <option value="">:: PO No. ::</option>
          <% po_nos.forEach(po => { %>
            <option value="<%= po.po_no %>" <%= po.po_no === po_no ? 'selected' : '' %>><%= po.po_no %></option>
          <% }) %>
        </select>
        <select name="style">
          <option value="">:: Style ::</option>
          <% styles.forEach(s => { %>
            <option value="<%= s.style %>" <%= s.style === style ? 'selected' : '' %>><%= s.style %></option>
          <% }) %>
        </select>
        <button type="submit">🔍 검색</button>
      </form>
      <a href="/admin/import_po/result"><button type="button">📊 Result</button></a>
    </div>

    <!-- ✅ paid form 수정: form 이 테이블을 감싸도록 구조 변경 -->
    <form method="POST" action="/admin/import_po/paid">
      <div class="form-row" style="justify-content: flex-end; margin-bottom: 10px;">
        <input type="date" name="pay_date" value="<%= today %>" required>
        <input type="number" name="exchange_rate" step="0.0001" placeholder="Exchange Rate" required>
        <button type="submit">💰 Paid</button>
      </div>

      <div class="table-wrapper">
        <table>
          <thead>
            <tr>
              <th>Vendor</th>
              <th>PO Date</th>
              <th>Style</th>
              <th>PO No.</th>
              <th>PCS</th>
              <th>Cost</th>
              <th>PO A. (RMB)</th>
              <th>Deposit Rate</th>
              <th>Deposit A. (RMB)</th>
              <th>Deposit Select</th>
              <th>Deposit</th>
              <th>Balance (RMB)</th>
              <th>Balance Select</th>
              <th>Balance</th>
              <th>Note</th>
              <th>✏️</th>
              <th>🗑️</th>
            </tr>
          </thead>
          <tbody>
            <% importPOs.forEach(po => { if (po.balance !== 0) { %>
              <tr>
                <td><%= po.v_name %></td>
                <td><%= new Date(po.po_date).toLocaleDateString('en-US') %></td>
                <td><%= po.style %></td>
                <td><%= po.po_no %></td>
                <td><%= po.pcs %></td>
                <td class="<%= po.cost < 0 ? 'negative' : '' %>">
                  <%= Number(po.cost).toLocaleString('en-US', { minimumFractionDigits: 2 }) %>
                </td>
                <td class="<%= po.po_amount < 0 ? 'negative' : '' %>">
                  <%= Number(po.po_amount).toLocaleString('en-US', { minimumFractionDigits: 2 }) %>
                </td>
                <td><%= po.v_rate %></td>
                <td class="<%= po.dp_amount < 0 ? 'negative' : '' %>">
                  <%= Number(po.dp_amount).toLocaleString('en-US', { minimumFractionDigits: 2 }) %>
                </td>
                <% if (!po.dex_date) { %>
                  <td><input type="checkbox" name="deposit_ids" value="<%= po.id %>"></td>
                  <td><button type="button" data-deposit-id="<%= po.id %>">💲</button></td>
                <% } else { %>
                  <td colspan="2">✔ Paid</td>
                <% } %>
                <td class="<%= po.balance < 0 ? 'negative' : '' %>">
                  <%= Number(po.balance).toLocaleString('en-US', { minimumFractionDigits: 2 }) %>
                </td>
                <% if (!po.bex_date) { %>
                  <td><input type="checkbox" name="balance_ids" value="<%= po.id %>"></td>
                  <td><button type="button" data-balance-id="<%= po.id %>">💲</button></td>
                <% } else { %>
                  <td colspan="2">✔ Paid</td>
                <% } %>
                <td class="<%= po.note === '환율 적용 불필요' ? 'note-red' : '' %>"><%= po.note %></td>
                <td><a href="/admin/import_po/edit/<%= po.id %>"><button>✏️</button></a></td>
                <td>
                  <form method="POST" action="/admin/import_po/delete/<%= po.id %>" onsubmit="return confirm('삭제하시겠습니까?');">
                    <button type="submit">🗑️</button>
                  </form>
                </td>
              </tr>
            <% }}) %>
          </tbody>
        </table>
      </div>
    </form>
  </div>



  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // ✅ 공유된 date, vendor
      const sharedDate = document.getElementById('shared-date');
      const sharedVendor = document.getElementById('shared-vendor');
    
      // ✅ 2차 폼에 넘길 hidden 필드
      const hiddenDate = document.getElementById('hidden-date');
      const hiddenVendor = document.getElementById('hidden-vendor');
      const hiddenRate = document.querySelector('form[action="/admin/import_po/add/direct"] input[name="v_rate"]');
    
      // ✅ vendor 변경 시 v_rate 자동 반영 (모든 form에 적용)
      const vendorSelects = document.querySelectorAll('select[name="v_name"]');
      vendorSelects.forEach(select => {
        const form = select.closest('form');
        const vRateInput = form.querySelector('input[name="v_rate"]');
    
        if (select && vRateInput) {
          // ⬇️ 초기 로딩 시 rate 세팅
          const initialRate = select.options[select.selectedIndex]?.getAttribute('data-rate');
          vRateInput.value = initialRate || '';
    
          // ⬇️ vendor 선택 변경 시 rate 업데이트
          select.addEventListener('change', () => {
            const selected = select.options[select.selectedIndex];
            const rate = selected.getAttribute('data-rate');
            vRateInput.value = rate || '';
          });
        }
      });
    
      // ✅ Enter 키로 다음 입력칸 이동 기능
      const inputs = document.querySelectorAll('input, select, textarea');
      inputs.forEach((el, index) => {
        el.addEventListener('keydown', (e) => {
          if (e.key === 'Enter') {
            e.preventDefault();
            const next = inputs[index + 1];
            if (next) next.focus();
          }
        });
      });
    
      // ✅ shared-date 값 localStorage에 저장 및 복원
      const savedDate = localStorage.getItem('po_date');
      if (savedDate) sharedDate.value = savedDate;
      sharedDate.addEventListener('change', () => {
        localStorage.setItem('po_date', sharedDate.value);
      });
    
      // ✅ shared-vendor 값 localStorage에 저장 및 복원
      const savedVendor = localStorage.getItem('v_name');
      if (savedVendor) {
        for (let i = 0; i < sharedVendor.options.length; i++) {
          if (sharedVendor.options[i].value === savedVendor) {
            sharedVendor.selectedIndex = i;
            break;
          }
        }
      }
      sharedVendor.addEventListener('change', () => {
        localStorage.setItem('v_name', sharedVendor.value);
      });
    
      // ✅ 2차 폼 제출 시 hidden 필드 값 동기화
      function syncHiddenFields() {
        if (hiddenDate && hiddenVendor && hiddenRate) {
          hiddenDate.value = sharedDate.value;
          hiddenVendor.value = sharedVendor.value;
    
          const selectedOption = sharedVendor.options[sharedVendor.selectedIndex];
          const rate = selectedOption.getAttribute('data-rate');
          hiddenRate.value = rate || '';
        }
      }
    
      const directForm = document.querySelector('form[action="/admin/import_po/add/direct"]');
      if (directForm) {
        directForm.addEventListener('submit', syncHiddenFields);
      }
    
      // ⬇️ 초기 로딩 시에도 복사 (선택사항)
      syncHiddenFields();
    
      // ✅ 💲 버튼 클릭 시 해당 checkbox 자동 선택 (Deposit/Balance)
      document.querySelectorAll('button[data-deposit-id]').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = btn.getAttribute('data-deposit-id');
          const checkbox = document.querySelector(`input[name="deposit_ids"][value="${id}"]`);
          if (checkbox) checkbox.checked = true;
        });
      });
    
      document.querySelectorAll('button[data-balance-id]').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = btn.getAttribute('data-balance-id');
          const checkbox = document.querySelector(`input[name="balance_ids"][value="${id}"]`);
          if (checkbox) checkbox.checked = true;
        });
      });
    });
    </script>
    
    
</body>
</html>