<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Import PO Input</title>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: #f5f7fa;
      color: #333;
      display: flex;
      flex-direction: column;
      height: 100vh;
      font-size: 12px;
    }

    .top-section {
      flex: 0 0 auto;
      padding: 10px;
    }

    .bottom-section {
      flex: 1 1 auto;
      padding: 10px;
      overflow-y: auto;
    }

    h2 {
      font-size: 20px;
      color: #333;
      margin-bottom: 15px;
    }

    .form {
      width: 100%;
    }

    .form-row {
      display: flex;
      gap: 10px;
      margin-bottom: 10px;
      align-items: center;
    }

    input, select, textarea {
      padding: 4px;
      font-size: 12px;
      border: 1px solid #ccc;
      border-radius: 4px;
      height: 24px;
    }

    button {
      padding: 4px 12px;
      font-size: 12px;
      border: 1px solid #066da5;
      border-radius: 4px;
      background-color: #fff;
      cursor: pointer;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      border: 1px solid #ccc;
      padding: 4px;
      text-align: center;
      font-weight: normal;
      font-size: 12px;
    }

    td.negative {
      color: red;
    }

    th {
      background-color: #f0f8ff;
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .table-wrapper {
      max-height: 550px;
      overflow-y: auto;
      border: 1px solid #ccc;
    }

    .filter-section {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 10px;
      justify-content: space-between;
    }

    /* note 에 '환율적용 불필요' 가 있을시 색변화 */
    td.note-red {
  color: red;
  font-weight: bold;
  background-color: #ffeaea;
}


  </style>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const vendorSelects = document.querySelectorAll('select[name="v_name"]');
      const vRateInput = document.querySelector('input[name="v_rate"]');

      vendorSelects.forEach(vendorSelect => {
        if (vendorSelect && vRateInput) {
          vendorSelect.addEventListener('change', () => {
            const selectedOption = vendorSelect.options[vendorSelect.selectedIndex];
            const rate = selectedOption.getAttribute('data-rate');
            vRateInput.value = rate || '';
          });

          const initialRate = vendorSelect.options[vendorSelect.selectedIndex]?.getAttribute('data-rate');
          vRateInput.value = initialRate || '';
        }
      });

      const inputs = document.querySelectorAll('input, select, textarea');
      inputs.forEach((el, index) => {
        el.addEventListener('keydown', (e) => {
          if (e.key === 'Enter') {
            e.preventDefault();
            const next = inputs[index + 1];
            if (next) next.focus();
          }
        });
      });
    });
  </script>
</head>
<body>
  <div class="top-section">
    <h2>Import PO Input</h2>

    <div style="display: flex; gap: 40px; align-items: flex-start;">
      <!-- ✅ 1차 방식 입력 (PCS * COST) -->
      <form method="POST" action="/admin/import_po/add/po" class="form" style="flex: 1;">
        <div class="form-row">
          <input type="date" name="po_date" id="shared-date" value="<%= today %>">
          <select name="v_name" id="shared-vendor" required>
            <% vendors.forEach(v => { %>
              <option value="<%= v.v_name %>" data-rate="<%= v.v_rate %>"><%= v.v_name %></option>
            <% }) %>
          </select>
          <input type="text" name="v_rate" placeholder="Deposit Rate" readonly>
        </div>
        <div class="form-row">
          <label style="white-space: nowrap;">PO 입력</label>
          <input type="text" name="style" placeholder="Style">
          <input type="text" name="po_no" placeholder="PO No.">
          <input type="number" name="pcs" placeholder="PCS" step="1">
          <input type="number" name="cost" placeholder="Cost" step="0.01">
          <button type="submit">➕ 입력</button>
        </div>
      </form>

      <!-- ✅ 2차 방식 입력 (단일 금액 / deposit 없음) -->
      <form method="POST" action="/admin/import_po/add/direct" class="form" style="flex: 1;">
        <div class="form-row"> 
           <!-- ✅ 숨겨서 가져올 필드 -->
          <input type="hidden" name="po_date" id="hidden-date">
          <input type="hidden" name="v_name" id="hidden-vendor">        

          <label style="white-space: nowrap;">기타 입력</label>
          <input type="text" name="style" placeholder="입력종류">
          <input type="number" name="cost" placeholder="Amount" step="0.01">
          <input type="hidden" name="v_rate" value="">
          <button type="submit">➕ 입력</button>
        </div>
      </form>
    </div>
  </div>

  <div class="bottom-section">
    <div class="filter-section">
      <div>
      
        <form method="GET" action="/admin/import_po" class="form-row">
          <select name="v_name">
            <option value="">:: Vendor Name ::</option>
            <% vendors.forEach(v => { %>
              <option value="<%= v.v_name %>" <%= v.v_name === v_name ? 'selected' : '' %>><%= v.v_name %></option>
            <% }) %>
          </select>
        
          <select name="po_no">
            <option value="">:: PO No. ::</option>
            <% po_nos.forEach(po => { %>
              <option value="<%= po.po_no %>" <%= po.po_no === po_no ? 'selected' : '' %>><%= po.po_no %></option>
            <% }) %>
          </select>
        
          <select name="style">
            <option value="">:: Style ::</option>
            <% styles.forEach(s => { %>
              <option value="<%= s.style %>" <%= s.style === style ? 'selected' : '' %>><%= s.style %></option>
            <% }) %>
          </select>
        
          <button type="submit">🔍 검색</button>
        </form>

      </div>
      
      <div>
        <input type="date" name="pay_date" value="<%= today %>">
        <input type="number" step="0.0001" name="exchange_rate" placeholder="Exchange Rate">
        <button type="submit">💰 Paid</button>
        <a href="/admin/import_po/result"><button type="button">📊 Result</button></a>
      </div>
    </div>

    <div class="table-wrapper">
      <table>
        <thead>
          <tr>
            <th>Vendor</th>
            <th>PO Date</th>
            <th>Style</th>
            <th>PO No.</th>
            <th>PCS</th>
            <th>Cost</th>
            <th>PO A. (RMB)</th>
            <th>Deposit Rate</th>
            <th>Deposit A. (RMB)</th>
            <th>Deposit Select</th>
            <th>Deposit</th>
            <th>Balance (RMB)</th>
            <th>Balance Select</th>
            <th>Balance</th>
            <th>Note</th>
            <th>✏️</th>
            <th>🗑️</th>
          </tr>
        </thead>
        <tbody>
          <% importPOs.forEach(po => { if (po.balance !== 0) { %>
            <tr>
              <td><%= po.v_name %></td>
              <td><%= new Date(po.po_date).toLocaleDateString('en-US') %></td>
              <td><%= po.style %></td>
              <td><%= po.po_no %></td>
              <td><%= po.pcs %></td>
              <td class="<%= po.cost < 0 ? 'negative' : '' %>"><%= Number(po.cost).toLocaleString() %></td>
              <td class="<%= po.po_amount < 0 ? 'negative' : '' %>"><%= Number(po.po_amount).toLocaleString() %></td>
              <td><%= po.v_rate %></td>
              <td class="<%= po.dp_amount < 0 ? 'negative' : '' %>"><%= Number(po.dp_amount).toLocaleString() %></td>
              <td><input type="checkbox" name="deposit_ids" value="<%= po.id %>"></td>
              <td><button type="button">💲</button></td>
              <td class="<%= po.balance < 0 ? 'negative' : '' %>"><%= Number(po.balance).toLocaleString() %></td>
              <td><input type="checkbox" name="balance_ids" value="<%= po.id %>"></td>
              <td><button type="button">💲</button></td>
              <td class="<%= po.note === '환율 적용 불필요' ? 'note-red' : '' %>"><%= po.note %></td>

              <td><a href="/admin/import_po/edit/<%= po.id %>"><button>✏️</button></a></td>
              <td>
                <form method="POST" action="/admin/import_po/delete/<%= po.id %>" onsubmit="return confirm('삭제하시겠습니까?');">
                  <button type="submit">🗑️</button>
                </form>
              </td>
            </tr>
          <% }}) %>
        </tbody>
      </table>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const sharedDate = document.getElementById('shared-date');
      const sharedVendor = document.getElementById('shared-vendor');
    
      const hiddenDate = document.getElementById('hidden-date');
      const hiddenVendor = document.getElementById('hidden-vendor');
      const hiddenRate = document.querySelector('input[name="v_rate"]');
    
      function syncHiddenFields() {
        hiddenDate.value = sharedDate.value;
        hiddenVendor.value = sharedVendor.value;
    
        const selected = sharedVendor.options[sharedVendor.selectedIndex];
        const rate = selected.getAttribute('data-rate') || '';
        hiddenRate.value = rate;
      }
    
      // 처음 로드 시, vendor 변경 시, date 변경 시 동기화
      sharedDate.addEventListener('change', syncHiddenFields);
      sharedVendor.addEventListener('change', syncHiddenFields);
      syncHiddenFields(); // 최초 실행
    
      // 2차 form 제출 직전에도 동기화
      const directForm = document.querySelector('form[action="/admin/import_po/add/direct"]');
      if (directForm) {
        directForm.addEventListener('submit', syncHiddenFields);
      }
    });

document.addEventListener('DOMContentLoaded', () => {
  const poDateInput = document.getElementById('shared-date');

  // 1. 페이지 로드 시 저장된 값 있으면 넣기
  const savedDate = localStorage.getItem('po_date');
  if (savedDate) {
    poDateInput.value = savedDate;
  }

  // 2. 사용자가 날짜 바꾸면 저장
  poDateInput.addEventListener('change', () => {
    localStorage.setItem('po_date', poDateInput.value);
  });
});

document.addEventListener('DOMContentLoaded', () => {
  const sharedVendor = document.getElementById('shared-vendor');

  // 1. 저장된 vendor name 복원
  const savedVendor = localStorage.getItem('v_name');
  if (savedVendor) {
    for (let i = 0; i < sharedVendor.options.length; i++) {
      if (sharedVendor.options[i].value === savedVendor) {
        sharedVendor.selectedIndex = i;
        break;
      }
    }
  }

  // 2. 사용자가 변경할 때 저장
  sharedVendor.addEventListener('change', () => {
    localStorage.setItem('v_name', sharedVendor.value);
  });
});


    </script>

</body>
</html>